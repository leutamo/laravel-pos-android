kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.CompilationException: Back-end: Please report this problem https://kotl.in/issue
/Users/erictel/StudioProjects/LaravelPOS/app/src/main/java/com/example/laravelpos/data/model/LoginResponse.kt:20:1
Problem with `@Serializable
@StabilityInferred(parameters = 0)
data class User {
  constructor(id: Int, first_name: String, last_name: String, email: String, phone: String? = null, email_verified_at: String? = null, created_at: String, updated_at: String, status: Int, language: String, image_url: String, media: List<Any>) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  val id: Int
    field = id
    get

  val first_name: String
    field = first_name
    get

  val last_name: String
    field = last_name
    get

  val email: String
    field = email
    get

  val phone: String?
    field = phone
    get

  val email_verified_at: String?
    field = email_verified_at
    get

  val created_at: String
    field = created_at
    get

  val updated_at: String
    field = updated_at
    get

  val status: Int
    field = status
    get

  val language: String
    field = language
    get

  val image_url: String
    field = image_url
    get

  @Contextual
  val media: List<Any>
    field = media
    get

  companion object Companion {
    private constructor() /* primary */ {
      super/*Any*/()
      /* <init>() */

    }

    fun serializer(): KSerializer<User>

    /* fake */ override operator fun equals(other: Any?): Boolean

    /* fake */ override fun hashCode(): Int

    /* fake */ override fun toString(): String

  }

  @Deprecated(message = "This synthesized declaration should not be used directly", level = DeprecationLevel.HIDDEN)
  @StabilityInferred(parameters = 0)
  object $serializer : GeneratedSerializer<User> {
    private constructor() /* primary */ {
      super/*Any*/()
      /* <init>() */

    }

    override fun serialize(encoder: Encoder, value: User)

    override fun deserialize(decoder: Decoder): User

    override val descriptor: SerialDescriptor
      override get

    override fun childSerializers(): Array<KSerializer<*>>

    /* fake */ override fun typeParametersSerializers(): Array<KSerializer<*>>

    /* fake */ override operator fun equals(other: Any?): Boolean

    /* fake */ override fun hashCode(): Int

    /* fake */ override fun toString(): String

    /* static final field */ val $stable: Int = 8
  }

  operator fun component1(): Int {
    return <this>.#id
  }

  operator fun component2(): String {
    return <this>.#first_name
  }

  operator fun component3(): String {
    return <this>.#last_name
  }

  operator fun component4(): String {
    return <this>.#email
  }

  operator fun component5(): String? {
    return <this>.#phone
  }

  operator fun component6(): String? {
    return <this>.#email_verified_at
  }

  operator fun component7(): String {
    return <this>.#created_at
  }

  operator fun component8(): String {
    return <this>.#updated_at
  }

  operator fun component9(): Int {
    return <this>.#status
  }

  operator fun component10(): String {
    return <this>.#language
  }

  operator fun component11(): String {
    return <this>.#image_url
  }

  operator fun component12(): List<Any> {
    return <this>.#media
  }

  fun copy(id: Int = <this>.#id, first_name: String = <this>.#first_name, last_name: String = <this>.#last_name, email: String = <this>.#email, phone: String? = <this>.#phone, email_verified_at: String? = <this>.#email_verified_at, created_at: String = <this>.#created_at, updated_at: String = <this>.#updated_at, status: Int = <this>.#status, language: String = <this>.#language, image_url: String = <this>.#image_url, media: List<Any> = <this>.#media): User {
    return User(id = id, first_name = first_name, last_name = last_name, email = email, phone = phone, email_verified_at = email_verified_at, created_at = created_at, updated_at = updated_at, status = status, language = language, image_url = image_url, media = media)
  }

  override fun toString(): String {
    return "User(" + "id=" + <this>.#id + ", " + "first_name=" + <this>.#first_name + ", " + "last_name=" + <this>.#last_name + ", " + "email=" + <this>.#email + ", " + "phone=" + <this>.#phone + ", " + "email_verified_at=" + <this>.#email_verified_at + ", " + "created_at=" + <this>.#created_at + ", " + "updated_at=" + <this>.#updated_at + ", " + "status=" + <this>.#status + ", " + "language=" + <this>.#language + ", " + "image_url=" + <this>.#image_url + ", " + "media=" + <this>.#media + ")"
  }

  override fun hashCode(): Int {
    var result: Int = <this>.#id.hashCode()
    result = result.times(other = 31).plus(other = <this>.#first_name.hashCode())
    result = result.times(other = 31).plus(other = <this>.#last_name.hashCode())
    result = result.times(other = 31).plus(other = <this>.#email.hashCode())
    result = result.times(other = 31).plus(other = when {
      EQEQ(arg0 = <this>.#phone, arg1 = null) -> 0
      else -> <this>.#phone.hashCode()
    })
    result = result.times(other = 31).plus(other = when {
      EQEQ(arg0 = <this>.#email_verified_at, arg1 = null) -> 0
      else -> <this>.#email_verified_at.hashCode()
    })
    result = result.times(other = 31).plus(other = <this>.#created_at.hashCode())
    result = result.times(other = 31).plus(other = <this>.#updated_at.hashCode())
    result = result.times(other = 31).plus(other = <this>.#status.hashCode())
    result = result.times(other = 31).plus(other = <this>.#language.hashCode())
    result = result.times(other = 31).plus(other = <this>.#image_url.hashCode())
    result = result.times(other = 31).plus(other = <this>.#media.hashCode())
    return result
  }

  override operator fun equals(other: Any?): Boolean {
    when {
      EQEQEQ(arg0 = <this>, arg1 = other) -> return true
    }
    when {
      other !is User -> return false
    }
    val tmp0_other_with_cast: User = other as User
    when {
      EQEQ(arg0 = <this>.#id, arg1 = tmp0_other_with_cast.#id).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#first_name, arg1 = tmp0_other_with_cast.#first_name).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#last_name, arg1 = tmp0_other_with_cast.#last_name).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#email, arg1 = tmp0_other_with_cast.#email).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#phone, arg1 = tmp0_other_with_cast.#phone).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#email_verified_at, arg1 = tmp0_other_with_cast.#email_verified_at).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#created_at, arg1 = tmp0_other_with_cast.#created_at).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#updated_at, arg1 = tmp0_other_with_cast.#updated_at).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#status, arg1 = tmp0_other_with_cast.#status).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#language, arg1 = tmp0_other_with_cast.#language).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#image_url, arg1 = tmp0_other_with_cast.#image_url).not() -> return false
    }
    when {
      EQEQ(arg0 = <this>.#media, arg1 = tmp0_other_with_cast.#media).not() -> return false
    }
    return true
  }

  /* static final field */ val $stable: Int = 8
  @JvmStatic
  internal fun write$Self(self: User, output: CompositeEncoder, serialDesc: SerialDescriptor)

  internal constructor(seen0: Int, id: Int, first_name: String?, last_name: String?, email: String?, phone: String?, email_verified_at: String?, created_at: String?, updated_at: String?, status: Int, language: String?, image_url: String?, media: List<Any>?, serializationConstructorMarker: SerializationConstructorMarker?)

}

`
Details: kotlinx.serialization compiler plugin internal error: unable to transform declaration, see cause
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializerClassLowering.lower(SerializationLoweringExtension.kt:230)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt$runOnFileInOrder$1.visitClass(SerializationLoweringExtension.kt:46)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls.visitClass(IrElementVisitorVoid.kt:44)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt$runOnFileInOrder$1.visitClass(SerializationLoweringExtension.kt:40)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt$runOnFileInOrder$1.visitClass(SerializationLoweringExtension.kt:40)
	at org.jetbrains.kotlin.ir.declarations.IrClass.accept(IrClass.kt:72)
	at org.jetbrains.kotlin.ir.declarations.IrFile.acceptChildren(IrFile.kt:34)
	at org.jetbrains.kotlin.ir.visitors.IrVisitorsKt.acceptChildrenVoid(IrVisitors.kt:15)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt$runOnFileInOrder$1.visitElement(SerializationLoweringExtension.kt:42)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls.visitPackageFragment(IrElementVisitorVoid.kt:168)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt$runOnFileInOrder$1.visitPackageFragment(SerializationLoweringExtension.kt:40)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls.visitFile(IrElementVisitorVoid.kt:184)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt$runOnFileInOrder$1.visitFile(SerializationLoweringExtension.kt:40)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls.visitFile(IrElementVisitorVoid.kt:180)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt$runOnFileInOrder$1.visitFile(SerializationLoweringExtension.kt:40)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt$runOnFileInOrder$1.visitFile(SerializationLoweringExtension.kt:40)
	at org.jetbrains.kotlin.ir.declarations.IrFile.accept(IrFile.kt:28)
	at org.jetbrains.kotlin.ir.visitors.IrVisitorsKt.acceptVoid(IrVisitors.kt:11)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtensionKt.runOnFileInOrder(SerializationLoweringExtension.kt:40)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationLoweringExtension.generate(SerializationLoweringExtension.kt:194)
	at org.jetbrains.kotlin.fir.pipeline.ConvertToIrKt.applyIrGenerationExtensions(convertToIr.kt:442)
	at org.jetbrains.kotlin.fir.pipeline.Fir2IrPipeline.runActualizationPipeline(convertToIr.kt:246)
	at org.jetbrains.kotlin.fir.pipeline.Fir2IrPipeline.convertToIrAndActualize(convertToIr.kt:130)
	at org.jetbrains.kotlin.fir.pipeline.ConvertToIrKt.convertToIrAndActualize(convertToIr.kt:99)
	at org.jetbrains.kotlin.fir.pipeline.ConvertToIrKt.convertToIrAndActualize$default(convertToIr.kt:72)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.convertToIrAndActualizeForJvm(jvmCompilerPipeline.kt:196)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.convertAnalyzedFirToIr(jvmCompilerPipeline.kt:169)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:249)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalStateException: Serializer for element of type kotlin.Any has not been found
	at org.jetbrains.kotlinx.serialization.compiler.backend.ir.SerializerSearchUtilKt.findTypeSerializerOrContext(SerializerSearchUtil.kt:84)
	at org.jetbrains.kotlinx.serialization.compiler.backend.ir.BaseIrGenerator.serializerInstance(BaseIrGenerator.kt:722)
	at org.jetbrains.kotlinx.serialization.compiler.backend.ir.BaseIrGenerator.serializerInstance$instantiate(BaseIrGenerator.kt:555)
	at org.jetbrains.kotlinx.serialization.compiler.backend.ir.BaseIrGenerator.serializerInstance(BaseIrGenerator.kt:598)
	at org.jetbrains.kotlinx.serialization.compiler.backend.ir.BaseIrGenerator.cacheableChildSerializerInstance(BaseIrGenerator.kt:496)
	at org.jetbrains.kotlinx.serialization.compiler.backend.ir.BaseIrGenerator.createCachedChildSerializers(BaseIrGenerator.kt:468)
	at org.jetbrains.kotlinx.serialization.compiler.backend.ir.SerializableIrGenerator.<init>(SerializableIrGenerator.kt:59)
	at org.jetbrains.kotlinx.serialization.compiler.backend.ir.SerializableIrGenerator$Companion.generate(SerializableIrGenerator.kt:398)
	at org.jetbrains.kotlinx.serialization.compiler.extensions.SerializerClassLowering.lower(SerializationLoweringExtension.kt:146)
	... 57 more


